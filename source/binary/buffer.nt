import {
  this.binary {binary, binary-length},
  this.buffer {_write, buffer, flush, make-buffer},
  this.file.descriptor {stdout},
  this.text {to-binary},
  this.unit {unit},
}

define write-binary(b: &buffer, content: &binary): unit {
  _write(
    b,
    this.binary._get-content-pointer(content),
    binary-length(content),
  )
}

define zen(): unit {
  let !k = make-buffer(stdout, 0);
  let _ = !k;
  let _ = !k;
  pin k = !k;
  write-binary(k, to-binary("hello\n"));
  write-binary(k, to-binary("hello\n"));
  write-binary(k, to-binary("hello\n"));
  write-binary(k, to-binary("hello\n"));
  write-binary(k, to-binary("hello\n"));
  write-binary(k, to-binary("hello\n"));
  write-binary(k, to-binary("hello\n"));
  write-binary(k, to-binary("hello\n"));
  flush(k)
}
