{
  target {
    test {
      main "test.nt",
      build-option [
        "-fsanitize=address",
      ],
    },
    bench-random-dict {
      main "bench/random-dict.nt",
      build-option [
        "-fsanitize=address",
      ],
    },
  },
  foreign {
    input [
      "source/foreign.c",
    ],
    output [
      "foreign.o",
    ],
    script [
      "{{clang}} -c -flto=thin -O2 source/foreign.c -o {{foreign}}/foreign.o",
    ],
  },
  prefix {
    Dict "this.dictionary",
    E "this.eq",
    Ext "this.external",
    FD "this.file.descriptor",
    FF "this.file.flag",
    FM "this.file.mode",
    Fa "this.float-array",
    Float "this.float",
    Int "this.int",
    L "this.list",
    List "this.list",
    M "this.matrix",
    Magic "this.magic",
    Mem "this.memory",
    O "this.ordering",
    Ord "this.ord",
    Po "this.poset",
    Q "this.queue",
    S "this.semigroup",
    Seek "this.file.seek",
    TIO "this.text.io",
    Vector "this.vector",
    Word "this.word",
  },
  preset {
    bool ["False", "True", "and", "bool", "not", "or"],
    box [],
    cell ["cell"],
    channel ["channel"],
    either ["Left", "Right", "either", "none"],
    eq ["Eq", "eq"],
    list ["Cons", "Nil", "list"],
    ord ["Ord", "ord"],
    ordering ["EQ", "GT", "LT", "ordering"],
    pair ["Pair", "pair"],
    rune.eq ["eq-rune", "ne-rune"],
    rune.ord ["lt-rune", "le-rune", "gt-rune", "ge-rune"],
    system [],
    text ["text"],
    text.eq ["eq-text", "ne-text"],
    text.io ["print", "printf"],
    text.ord ["lt-text", "le-text", "gt-text", "ge-text"],
    thread ["thread"],
    trick [],
    unit ["Unit", "unit"],
  },
}
