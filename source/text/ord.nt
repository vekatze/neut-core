import {
  this.binary.ord {ge-binary, gt-binary, le-binary, lt-binary},
  this.bool {bool},
  this.ord {Ord, ord},
  this.ordering {EQ, GT, LT},
  this.text {_Text, text},
}

define lt-text(t1: &text, t2: &text): bool {
  tie _Text(xs1) = t1 in
  tie _Text(xs2) = t2 in
  lt-binary(xs1, xs2)
}

define le-text(t1: &text, t2: &text): bool {
  tie _Text(xs1) = t1 in
  tie _Text(xs2) = t2 in
  le-binary(xs1, xs2)
}

define gt-text(t1: &text, t2: &text): bool {
  tie _Text(xs1) = t1 in
  tie _Text(xs2) = t2 in
  gt-binary(xs1, xs2)
}

define ge-text(t1: &text, t2: &text): bool {
  tie _Text(xs1) = t1 in
  tie _Text(xs2) = t2 in
  ge-binary(xs1, xs2)
}

inline as-ord: ord(text) {
  Ord of {
    compare = {
      function (x, y) {
        if gt-text(x, y) {
          GT
        } else-if lt-text(x, y) {
          LT
        } else {
          EQ
        }
      }
    },
  }
}
