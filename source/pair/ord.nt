import {
  this.ord {Ord, ord},
  this.ordering {EQ, GT, LT},
  this.pair {Pair, pair},
}

inline as-ord<a, b>(f: ord(a), g: ord(b)): ord(pair(a, b)) {
  let Ord of {compare := compare-f} = f;
  let Ord of {compare := compare-g} = g;
  Ord of {
    compare := {
      function (p1, p2) {
        tie Pair(x1, y1) = p1;
        tie Pair(x2, y2) = p2;
        match compare-f(x1, x2) {
        | LT =>
          LT
        | GT =>
          GT
        | EQ =>
          compare-g(y1, y2)
        }
      }
    },
  }
}

inline as-ord'<a, b>(f: ord(a), g: ord(b)): ord(pair(a, b)) {
  let Ord of {compare := compare-f} = f;
  let Ord of {compare := compare-g} = g;
  Ord of {
    compare := {
      function (p1, p2) {
        tie Pair(x1, y1) = p1;
        tie Pair(x2, y2) = p2;
        match compare-g(y1, y2) {
        | LT =>
          LT
        | GT =>
          GT
        | EQ =>
          compare-f(x1, x2)
        }
      }
    },
  }
}
